Fonctionnement de mon programme :

Creé aleatoirement une solution valide, cherche tous les voisins de cette solution , les évalues.
Si un voisins est meilleurs, on le selectionne et on cherche ces voisins ...

Liste tabou de base implémenté, probleme rencontrer : il n'est pas rare que tous les "voisins" 
sont des solution qui on une capacité trop grande ou tabou.

Solution trouvé : Creation d'une liste de voisin, si tous les voisins sont evaluate a -1 ou TABOU, alors on prend aleatoirement un voisin

Resultat , l'algo trouve la solution optimale en moin de 100 iteration ! ( le plus souvent ... )

Fonction ajouté : le nombre de batch est "trouvé" par l'application

Resultat sur les fichier :
Fichier		resultatDmonAlgo		resultat donné par le prof
005			215						215
007a		3728					2581
007			245						245
020a		340-350-380				200
050a		790						250
100a		303 380					49 392
200a		988 895					323 955

bon j'ai pas changé les valeurs des durée tabou dans ces test,mais bon... ya encore enormement de boulot ^^'


à faire : essayer de faire evoluer la durée tabou 

Réglage auto-adaptatif de la longueur de la liste taboue
 technique consiste à laisser la longueur de la liste taboue se régler
elle-même au cours de la recherche :
- Si on observe que l’algorithme tend à cycler (ou tend à rester confiné dans la
même région), on augmente la longueur de la liste
- Sinon on la réduit légèrement